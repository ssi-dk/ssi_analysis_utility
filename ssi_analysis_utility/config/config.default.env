# environmental (ENV) variables. These are written as SSI_ANALYSIS_UTILITY_VARIABLENAME=VALUE to avoid conflicts with other ENV variables. 
# Using the standard template these values can be overwritten by:
# - defining SSI_ANALYSIS_UTILITY_CONFIG_FILE pointing to a similar file with a subset of values
# - setting the values as environmental variables.
# The priority goes env variables > config file > default file.
# The all configs other than config.default.env are in .gitignore
# All .env config files should have an associated .yaml config file with it which the program interacts with.

# NOTE: remember if referencing another ENV var as a variable it needs to be defined first

# If more structured variables are needed use config.default.yaml or another of your own creation
# This file path is stored as CORE_CONFIG_FILE when overriding
# It is commented out because of the default use case, but should be included for all non default cases.
# CORE_YAML_CONFIG_FILE=
CORE_PROJECT_VARIABLE_PREFIX=SSI_ANALYSIS_UTILITY_
# For testing purposes
CORE_TEST_VAR="Test"

# Example variable please exchange with relevant variables
SSI_ANALYSIS_UTILITY_INPUT_DIR=./input
SSI_ANALYSIS_UTILITY_OUTPUT_DIR=./output
SSI_ANALYSIS_UTILITY_OUTPUT_FILE=${SSI_ANALYSIS_UTILITY_OUTPUT_DIR}/output.txt
SSI_ANALYSIS_UTILITY_USER_INPUT_NAME=Kim

